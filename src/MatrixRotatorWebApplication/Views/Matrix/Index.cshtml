@using MatrixRotatorWebApplication.Models

@model MatrixRotatorWebApplication.Models.Matrix<string>

@{
    ViewData["Title"] = "Matrix";
    var rotatedMatrix = ViewData["RotatedMatrix"] as Matrix<string>;
}

<h2>Matrix</h2>
@using (Html.BeginForm("ChangeSize", "Matrix"))
{

    @Html.LabelFor(m => m.Size)
    <br />
    @Html.TextBoxFor(m => m.Size)
    <input type="submit" value="Change size" class="btn btn-default" />
}

<form method="post" enctype="multipart/form-data" asp-controller="Matrix" asp-action="UploadMatrix">
    <div class="form-group">
        <div class="col-md-10">
            <p>Upload one or more files using this form:</p>
            <input type="file" name="file" accept=".csv" />
        </div>
    </div>
    <div class="form-group">
        <div class="col-md-10">
            <input type="submit" value="Upload" />
        </div>
    </div>
</form>

@using (Html.BeginForm("Rotate", "Matrix", new { Model.Size }))
{
    <table class="table">
        <caption>Source matrix</caption>
        <tbody>
            @for (var i = 0; i < Model.Size; i++)
            {
                <tr>
                    @for (var j = 0; j < Model.Size; j++)
                    {
                        <td>
                            @Html.TextBox($"Elements[{i}, {j}]", Model.Elements[i, j])
                        </td>
                    }
                </tr>
            }
        </tbody>
    </table>
    <input type="submit" value="Rotate" class="btn btn-default" />
}
@if (rotatedMatrix != null)
{
    <table class="table">
        <caption>Rotated matrix</caption>
        <tbody>
            @for (var i = 0; i < rotatedMatrix.Size; i++)
            {
                <tr>
                    @for (var j = 0; j < rotatedMatrix.Size; j++)
                    {
                        <td>
                            @Html.TextBox($"RotatedElements[{i}, {j}]", rotatedMatrix.Elements[i, j])
                        </td>
                    }
                </tr>
            }
        </tbody>
    </table>

}